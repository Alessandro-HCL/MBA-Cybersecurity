# M&A_analise_OKAY

import streamlit as st
import pandas as pd
import os
from datetime import datetime

st.set_page_config(page_title="An√°lise M&A", layout="wide")

pasta_inventario = "inventario"

@st.cache_data
def listar_arquivos():
    if not os.path.exists(pasta_inventario):
        return []
    return [f for f in os.listdir(pasta_inventario) if f.endswith(".xlsx") or f.endswith(".csv")]

def carregar_inventario(nome_arquivo):
    caminho = os.path.join(pasta_inventario, nome_arquivo)
    if nome_arquivo.endswith(".csv"):
        return pd.read_csv(caminho)
    return pd.read_excel(caminho)

st.title("üìä An√°lise de M&A - Invent√°rio de Rede")

menu = st.sidebar.radio("Escolha uma op√ß√£o:", [
    "üìÇ Invent√°rio da Rede",
    "‚ö†Ô∏è Riscos Operacionais",
    "üîí Equipamentos EoL/EoS"])

arquivos = listar_arquivos()
if not arquivos:
    st.warning("Nenhum invent√°rio encontrado na pasta 'inventario'.")
else:
    nome_arquivo = st.selectbox("Selecione o invent√°rio:", arquivos)
    df = carregar_inventario(nome_arquivo)

    if menu == "üìÇ Invent√°rio da Rede":
        colunas_exibir = [col for col in [
            "IP", "Cisco_Hostname", "Modelo", "Serial", "IOS",
            "Uptime", "Portas Abertas", "Uso de CPU (%)", "Uso de Mem√≥ria (%)"
        ] if col in df.columns]
        st.subheader("üìä Invent√°rio da Rede")
        st.dataframe(df[colunas_exibir])

    elif menu == "‚ö†Ô∏è Riscos Operacionais":
        df['Risco'] = 'OK'
        if 'Uso de CPU (%)' in df.columns:
            df['Uso de CPU (%)'] = pd.to_numeric(df['Uso de CPU (%)'], errors='coerce')
            df.loc[df['Uso de CPU (%)'] > 80, 'Risco'] = 'ALTO'
        if 'Uso de Mem√≥ria (%)' in df.columns:
            df['Uso de Mem√≥ria (%)'] = pd.to_numeric(df['Uso de Mem√≥ria (%)'], errors='coerce')
            df.loc[df['Uso de Mem√≥ria (%)'] > 80, 'Risco'] = 'ALTO'
        if 'Uptime' in df.columns:
            df['UptimeDias'] = df['Uptime'].astype(str).str.extract(r'(\\d+)').astype(float)
            df['UptimeDias'] = df['UptimeDias'].fillna(0)
            df.loc[df['UptimeDias'] > 365, 'Risco'] = 'ALTO'

        risco_df = df[df['Risco'] == 'ALTO']
        if risco_df.empty:
            st.success("Nenhum risco operacional alto detectado.")
        else:
            colunas = [col for col in ["IP", "Cisco_Hostname", "Modelo", "Uso de CPU (%)", "Uso de Mem√≥ria (%)", "Uptime", "Risco"] if col in risco_df.columns]
            st.subheader("‚ö†Ô∏è Dispositivos com Risco Operacional Alto")
            st.dataframe(risco_df[colunas])

    elif menu == "üîí Equipamentos EoL/EoS":
        base_path = os.path.join(pasta_inventario, "eos_database.csv")
        if not os.path.exists(base_path):
            st.error("Base 'eos_database.csv' n√£o encontrada na pasta de invent√°rio.")
        else:
            eos_db = pd.read_csv(base_path)
            if not {'Modelo', 'EoL', 'EoS'}.issubset(eos_db.columns):
                st.error("A base 'eos_database.csv' deve conter colunas: Modelo, EoL, EoS.")
            else:
                df['Modelo'] = df['Modelo'].str.upper().str.strip()
                eos_db['Modelo'] = eos_db['Modelo'].str.upper().str.strip()
                eos_db['EoS'] = pd.to_datetime(eos_db['EoS'], dayfirst=True, errors='coerce')
                eos_db['EoL'] = pd.to_datetime(eos_db['EoL'], dayfirst=True, errors='coerce')
                resultado = pd.merge(df, eos_db, on='Modelo', how='left')
                hoje = datetime.today()
                resultado['Status'] = resultado['EoS'].apply(lambda x: '‚ùå Fora de Suporte' if pd.notnull(x) and x < hoje else '‚úÖ Suportado')
                resultado['Recomendacao'] = resultado['Status'].apply(lambda x: '‚ö†Ô∏è Substituir/Planejar upgrade' if 'Fora' in x else 'OK')
                st.subheader("Equipamentos com Status de Suporte")
                st.dataframe(resultado[["IP", "Modelo", "Status", "Recomendacao"]])

                nome_saida = os.path.join(pasta_inventario, "equipamentos_eos_resultado.xlsx")
                resultado.to_excel(nome_saida, index=False)
                st.success(f"An√°lise salva em: {nome_saida}")